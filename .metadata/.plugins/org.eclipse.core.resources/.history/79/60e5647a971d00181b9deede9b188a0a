package salycanela.controller;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.model.SelectItem;

import salycanela.model.entities.TabVtsDetallePedido;
import salycanela.model.entities.TabVtsPedido;
import salycanela.model.entities.TabVtsPlato;
import salycanela.model.entities.TabVtsTransaccion;
import salycanela.model.manager.ManagerPedido;
import salycanela.model.manager.ManagerPlato;
import salycanela.view.util.JSFUtil;

@SessionScoped
@ManagedBean
public class ControllerPedido {
	@EJB
	private ManagerPedido managerPedido;
	@EJB
	private ManagerPlato managerPlato;

	private List<TabVtsPedido> lista_x_entregar;
	private List<TabVtsPedido> lista_entregado;

	private int cantidad;
	private int idplato;
	private int mesa = 0;
	private int idusuario;
	private boolean entregapedido;
	private boolean pedidonormal;
	private TabVtsPedido pedidoTmp;
	private TabVtsTransaccion transaccionTmp;
	private boolean transaccionTmpGuardada;
	private boolean pedidoTmpGuardada;

	private int idpedido;
	private boolean entrega;
	private List<TabVtsDetallePedido> lista_detalles;
	private BigDecimal valorpedido;

	@PostConstruct
	public void iniciar() {
		nuevoPedido();
	}

	public void nuevoPedido() {
		lista_x_entregar = managerPedido.findAllPedidosXentregar();
		lista_entregado = managerPedido.findAllPedidosEntregado();
		transaccionTmp = managerPedido.crearTransaccionTmp();
		pedidoTmp = managerPedido.crearPedidoTmp(transaccionTmp);
		// detalles
		cantidad = 1;
		idplato = 0;
		// pedido
		mesa = 0;
		entregapedido = false;
		pedidonormal = true;
		// estados de los guardados
		transaccionTmpGuardada = false;
		pedidoTmpGuardada = false;
	}

	public String insertarDetalle() {
		if (transaccionTmpGuardada == true && pedidoTmpGuardada == true) {
			JSFUtil.crearMensajeWarning("El pedido ya fue guardado.");
			return "";
		}
		try {
			managerPedido.agregarDetallePedidoTmp(pedidoTmp, idplato, cantidad, pedidonormal);
			idplato = 0;
			cantidad = 1;
		} catch (Exception e) {
			JSFUtil.crearMensajeError(e.getMessage());
		}
		return "";
	}

	public void asignarMesa() {
		if (pedidoTmpGuardada == true) {
			JSFUtil.crearMensajeWarning("El pedido ya fue guardado.");
		}
		try {
			managerPedido.asignarMesaPedidoTmp(pedidoTmp, mesa);
		} catch (Exception e) {
			JSFUtil.crearMensajeError("Por favor asigne una mesa");

		}
	}

	public String guardarPedido() {
		if (transaccionTmpGuardada == true && pedidoTmpGuardada == true) {
			JSFUtil.crearMensajeWarning("El pedido ya fue guardada.");
			return "";
		}
		try {
			managerPedido.guardarPedidoTemporal(transaccionTmp, pedidoTmp);
			transaccionTmpGuardada = true;
			pedidoTmpGuardada = true;
			lista_x_entregar = managerPedido.findAllPedidosXentregar();
			lista_entregado = managerPedido.findAllPedidosEntregado();
			JSFUtil.crearMensajeInfo("Pedido guardado exitosamente");
		} catch (Exception e) {
			JSFUtil.crearMensajeError(e.getMessage());
		}
		return "";
	}

	// editar pedidos entregados - anulados
	public void EntregarPedido(TabVtsPedido pedido, boolean entregar) throws Exception {
		try {
			idpedido = pedido.getIdpedido();
			managerPedido.entregarPedido(idpedido, entregar);

			JSFUtil.crearMensajeInfo("Pedido entregado exitosamente");
		} catch (Exception e) {
			JSFUtil.crearMensajeError(e.getMessage());
		}
		lista_x_entregar = managerPedido.findAllPedidosXentregar();
		lista_entregado = managerPedido.findAllPedidosEntregado();
	}

	public void AnularPedido(TabVtsPedido pedido, boolean anular) throws Exception {
		try {
			idpedido = pedido.getIdpedido();
			managerPedido.anularPedido(idpedido, anular);

			JSFUtil.crearMensajeInfo("Pedido anulado exitosamente");
		} catch (Exception e) {
			JSFUtil.crearMensajeError(e.getMessage());
		}
		lista_x_entregar = managerPedido.findAllPedidosXentregar();
		lista_entregado = managerPedido.findAllPedidosEntregado();
	}

	public void CargarPedido(TabVtsPedido pedido) {
		idpedido = pedido.getIdpedido();
		mesa = pedido.getMesapedido();
		valorpedido=pedido.getValorpedido();
		lista_detalles = pedido.getTabVtsDetallePedidos();
	}

	public List<SelectItem> getListaPlatoSI() {
		List<SelectItem> listadoSI = new ArrayList<SelectItem>();
		List<TabVtsPlato> listadoPlatos = managerPlato.findAllPlatos();
		for (TabVtsPlato p : listadoPlatos) {
			SelectItem item = new SelectItem(p.getIdplato(), p.getNombreplato());
			listadoSI.add(item);
		}
		return listadoSI;
	}

	public int getCantidad() {
		return cantidad;
	}

	public void setCantidad(int cantidad) {
		this.cantidad = cantidad;
	}

	public int getIdplato() {
		return idplato;
	}

	public void setIdplato(int idplato) {
		this.idplato = idplato;
	}

	public int getMesa() {
		return mesa;
	}

	public void setMesa(int mesa) {
		this.mesa = mesa;
	}

	public int getIdusuario() {
		return idusuario;
	}

	public void setIdusuario(int idusuario) {
		this.idusuario = idusuario;
	}

	public boolean isEntregapedido() {
		return entregapedido;
	}

	public void setEntregapedido(boolean entregapedido) {
		this.entregapedido = entregapedido;
	}

	public boolean isPedidonormal() {
		return pedidonormal;
	}

	public void setPedidonormal(boolean pedidonormal) {
		this.pedidonormal = pedidonormal;
	}

	public TabVtsPedido getPedidoTmp() {
		return pedidoTmp;
	}

	public void setPedidoTmp(TabVtsPedido pedidoTmp) {
		this.pedidoTmp = pedidoTmp;
	}

	public TabVtsTransaccion getTransaccionTmp() {
		return transaccionTmp;
	}

	public void setTransaccionTmp(TabVtsTransaccion transaccionTmp) {
		this.transaccionTmp = transaccionTmp;
	}

	public boolean isTransaccionTmpGuardada() {
		return transaccionTmpGuardada;
	}

	public void setTransaccionTmpGuardada(boolean transaccionTmpGuardada) {
		this.transaccionTmpGuardada = transaccionTmpGuardada;
	}

	public boolean isPedidoTmpGuardada() {
		return pedidoTmpGuardada;
	}

	public void setPedidoTmpGuardada(boolean pedidoTmpGuardada) {
		this.pedidoTmpGuardada = pedidoTmpGuardada;
	}

	public List<TabVtsPedido> getLista_x_entregar() {
		return lista_x_entregar;
	}

	public void setLista_x_entregar(List<TabVtsPedido> lista_x_entregar) {
		this.lista_x_entregar = lista_x_entregar;
	}

	public List<TabVtsPedido> getLista_entregado() {
		return lista_entregado;
	}

	public void setLista_entregado(List<TabVtsPedido> lista_entregado) {
		this.lista_entregado = lista_entregado;
	}

	public int getIdpedido() {
		return idpedido;
	}

	public void setIdpedido(int idpedido) {
		this.idpedido = idpedido;
	}

	public boolean isEntrega() {
		return entrega;
	}

	public void setEntrega(boolean entrega) {
		this.entrega = entrega;
	}

	public List<TabVtsDetallePedido> getLista_detalles() {
		return lista_detalles;
	}

	public void setLista_detalles(List<TabVtsDetallePedido> lista_detalles) {
		this.lista_detalles = lista_detalles;
	}

	public BigDecimal getValorpedido() {
		return valorpedido;
	}

	public void setValorpedido(BigDecimal valorpedido) {
		this.valorpedido = valorpedido;
	}

}
